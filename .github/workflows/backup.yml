name: Backup DB

on:
  workflow_dispatch:

jobs:
  copy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Verify pg_dump Version
        run: pg_dump --version

      - name: Configure AWS credentials for source account
        run: aws configure set aws_access_key_id ${{ secrets.SOURCE_AWS_ACCESS_KEY_ID }} && aws configure set aws_secret_access_key ${{ secrets.SOURCE_AWS_SECRET_ACCESS_KEY }} && aws configure set default.region us-east-1

      - name: Assume cross-account role in source account
        run: |
          assumed_role=$(aws sts assume-role --role-arn arn:aws:iam::621632844397:role/S3MigrationRole --role-session-name github-action)
          echo "::set-env name=AWS_STS_ACCESS_KEY_ID::$(echo $assumed_role | jq -r .Credentials.AccessKeyId)"
          echo "::set-env name=AWS_STS_SECRET_ACCESS_KEY::$(echo $assumed_role | jq -r .Credentials.SecretAccessKey)"
          echo "::set-env name=AWS_STS_SESSION_TOKEN::$(echo $assumed_role | jq -r .Credentials.SessionToken)"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.SOURCE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SOURCE_AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: us-east-1
          ACTIONS_ALLOW_UNSECURE_COMMANDS: 'true'

      - name: Copy DB to bucket
        run: |
          chmod +x ./backup.sh
          PGPASSWORD="${{ secrets.PGPASSWORD }}" ./backup.sh
        env:
          AWS_ACCESS_KEY_ID: ${{ env.AWS_STS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ env.AWS_STS_SECRET_ACCESS_KEY }}
          AWS_SESSION_TOKEN: ${{ env.AWS_STS_SESSION_TOKEN }}
          AWS_DEFAULT_REGION: us-east-1
